import { useEffect, useState } from 'react';
import TaskList from '../components/TaskList';
import TaskFilters from '../components/TaskFilters';
import EmptyState from '../components/EmptyState';
import ConfirmDialog from '../components/ConfirmDialog';

export default function TrashPage({ tasks, loadTasks, onRestore, onHardDelete, onEmptyTrash }) {
  const [order, setOrder] = useState('desc');
  const [isClearing, setIsClearing] = useState(false);
  const [confirmAllOpen, setConfirmAllOpen] = useState(false);

  useEffect(() => {
    loadTasks('deleted', order);
  }, [order, loadTasks]);

  const handleRestore = async task => {
    await onRestore(task, 'deleted', order);
  };

  const isEmpty = tasks.length === 0;

  const openConfirmAll = () => {
    if (!tasks.length) return;
    setConfirmAllOpen(true);
  };

  const confirmEmptyTrash = async () => {
    setConfirmAllOpen(false);
    try {
      setIsClearing(true);
      await onEmptyTrash('deleted', order);
    } finally {
      setIsClearing(false);
    }
  };

  return (
    <>
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <div className="mb-4">
        <h1 className="text-xl sm:text-2xl font-bold text-gray-800 dark:text-gray-200">–ö–æ—Ä–∑–∏–Ω–∞</h1>

        {/* –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è: –Ω–∞ –º–æ–±–∏–ª–µ –≤ —Å—Ç–æ–ª–±–∏–∫, –Ω–∞ sm+ –≤ –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É */}
        <div className="mt-2 flex flex-col sm:flex-row sm:items-center sm:justify-between gap-2">
          <TaskFilters order={order} setOrder={setOrder} className="w-full sm:w-auto" />

          {/* –ö–Ω–æ–ø–∫–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å —É–¥–∞–ª—ë–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏ */}
          {!isEmpty && (
            <button
              type="button"
              onClick={openConfirmAll}
              disabled={isClearing}
              className="
                w-full sm:w-auto inline-flex items-center justify-center gap-2 h-10 px-3 rounded-lg
                border border-red-300 dark:border-red-600
                text-red-600 dark:text-red-400
                hover:bg-red-50 dark:hover:bg-red-900/20 hover:border-red-500
                active:scale-[.98]
                disabled:opacity-50 disabled:cursor-not-allowed
                transition whitespace-nowrap
              "
              aria-label="–û—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É"
              title="–£–¥–∞–ª–∏—Ç—å –≤—Å–µ –∑–∞–¥–∞—á–∏ –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã"
            >
              <span className="text-lg">üßπ</span>
              <span>–û—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É</span>
            </button>
          )}
        </div>
      </div>

      {/* –ö–æ–Ω—Ç–µ–Ω—Ç */}
      <div className="flex-1 flex">
        {isEmpty ? (
          <div className="flex-1 grid place-items-center">
            <EmptyState icon="üóëÔ∏è" message="–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞. –ü–æ–∫–∞ –Ω–µ—á–µ–≥–æ —É–¥–∞–ª—è—Ç—å!" />
          </div>
        ) : (
          <div className="w-full">
            <TaskList
              tasks={tasks}
              isTrash
              onRestore={handleRestore}
              onHardDelete={task => onHardDelete(task, 'deleted', order)}
            />
          </div>
        )}
      </div>

      <ConfirmDialog
        open={confirmAllOpen}
        onClose={() => setConfirmAllOpen(false)}
        onConfirm={confirmEmptyTrash}
        title="–û—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É?"
        description="–í—Å–µ –∑–∞–¥–∞—á–∏ –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã –±—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã –±–µ–∑–≤–æ–∑–≤—Ä–∞—Ç–Ω–æ."
        confirmText="–£–¥–∞–ª–∏—Ç—å –≤—Å—ë"
        cancelText="–û—Ç–º–µ–Ω–∞"
        tone="danger"
      />
    </>
  );
}
